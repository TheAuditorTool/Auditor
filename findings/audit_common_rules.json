{
  "category": "common",
  "audit_date": "2025-10-04",
  "files_audited": [
    "C:\\Users\\santa\\Desktop\\TheAuditor\\theauditor\\rules\\common\\__init__.py",
    "C:\\Users\\santa\\Desktop\\TheAuditor\\theauditor\\rules\\common\\util.py"
  ],
  "total_violations": 0,
  "total_rule_files": 0,
  "violations_by_file": {},
  "gold_standard_files": [
    "C:\\Users\\santa\\Desktop\\TheAuditor\\theauditor\\rules\\common\\util.py"
  ],
  "critical_issues": [],
  "compliance_score": 100,
  "notes": "No rule files found in common/ folder. This folder contains only utility modules (util.py) that provide computational functions for other rules to use. These are NOT security rules and do NOT implement the StandardRuleContext interface. The util.py module is correctly designed as a pure utility library with no database access.",
  "folder_purpose": "Shared Utility Library",
  "folder_contents": {
    "__init__.py": {
      "type": "Package Export",
      "description": "Exports utility functions for easy import by other rules",
      "exports": [
        "calculate_entropy",
        "EntropyCalculator",
        "EntropyLevel",
        "is_sequential",
        "is_keyboard_walk",
        "PatternDetector",
        "decode_and_verify_base64",
        "Base64Validator",
        "PatternConfig",
        "KeyboardPatterns"
      ]
    },
    "util.py": {
      "type": "Utility Module",
      "description": "Security analysis utilities for pattern detection and analysis",
      "provides": [
        "Entropy calculation (Shannon entropy for randomness measurement)",
        "Pattern detection (sequential, keyboard walks, repetitive patterns)",
        "Encoding validation (Base64 decoding and verification)",
        "Test value detection (placeholder/test string identification)"
      ],
      "characteristics": [
        "Pure computational functions - no database access",
        "Does NOT implement StandardRuleContext interface",
        "Provides O(1) frozenset-based pattern matching",
        "Used by security rules to analyze extracted data",
        "No refactor needed - correct as-is"
      ]
    }
  },
  "utility_functions_summary": {
    "entropy_calculation": {
      "class": "EntropyCalculator",
      "purpose": "Shannon entropy measurement for randomness detection",
      "thresholds": {
        "VERY_LOW": 2.0,
        "LOW": 2.5,
        "MEDIUM": 3.0,
        "HIGH": 4.0,
        "VERY_HIGH": 5.0
      }
    },
    "pattern_detection": {
      "class": "PatternDetector",
      "functions": [
        "is_sequential() - detects incrementing/decrementing character sequences",
        "is_keyboard_walk() - detects QWERTY keyboard patterns",
        "is_repetitive() - detects high character repetition (>90%)",
        "is_test_value() - detects common test/placeholder values"
      ]
    },
    "base64_validation": {
      "class": "Base64Validator",
      "purpose": "Decode Base64 and verify if content is secret-like",
      "false_positive_checks": [
        "Sequential patterns",
        "Keyboard walks",
        "Repetitive content",
        "Test values",
        "Low entropy content"
      ]
    }
  },
  "audit_conclusion": "âœ… COMPLIANT - No rule files to audit. The common/ folder correctly serves as a shared utility library for other security rules. All functions are pure computational utilities with no database dependencies.",
  "recommendation": "No action required. The common utilities are well-designed and serve their intended purpose."
}
