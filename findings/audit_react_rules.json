{
  "category": "react",
  "audit_date": "2025-10-04",
  "files_audited": [
    "component_analyze.py",
    "hooks_analyze.py",
    "render_analyze.py",
    "state_analyze.py"
  ],
  "total_violations": 124,
  "critical_violations": 20,
  "gold_standard_files": [],
  "compliance_score": 0,
  "violations_by_file": {
    "component_analyze.py": {
      "total": 31,
      "critical": 5,
      "violations": {
        "metadata": {
          "status": "PASS",
          "issues": []
        },
        "database_contracts": {
          "status": "FAIL",
          "critical_issues": [
            {
              "line": "106-138",
              "severity": "CRITICAL",
              "violation": "CANCER - Table existence checking via sqlite_master",
              "code": "_check_table_availability() queries sqlite_master to check table existence",
              "fix": "DELETE entire method - schema contract guarantees table existence"
            },
            {
              "line": "109-110",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return []",
              "fix": "REMOVE check - assume table exists per schema contract"
            },
            {
              "line": "194-195",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_hooks' not in self.existing_tables: return",
              "fix": "REMOVE check - assume table exists per schema contract"
            },
            {
              "line": "153-154",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return",
              "fix": "REMOVE check - assume table exists per schema contract"
            },
            {
              "line": "361-362",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_hooks' not in self.existing_tables: return",
              "fix": "REMOVE check - assume table exists per schema contract"
            }
          ],
          "non_critical_issues": [
            {
              "line": "142-148",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query() - columns verified as correct",
              "table": "react_components",
              "columns_used": ["file", "name", "type", "start_line", "end_line"],
              "schema_status": "VALID - all columns exist in schema.py",
              "recommendation": "Consider using build_query() for consistency"
            },
            {
              "line": "167-174",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name"],
              "schema_status": "VALID",
              "recommendation": "Use build_query() for type safety"
            },
            {
              "line": "197-210",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name", "type", "start_line", "hooks_used", "props_type"],
              "schema_status": "VALID",
              "recommendation": "Use build_query() for type safety"
            },
            {
              "line": "244-252",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN - columns verified",
              "tables": ["react_components (c1)", "react_components (c2)"],
              "columns_used": ["file", "name", "start_line", "end_line"],
              "schema_status": "VALID",
              "recommendation": "Complex JOIN - direct SQL acceptable, but verify columns"
            },
            {
              "line": "271-278",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name", "type", "start_line"],
              "schema_status": "VALID"
            },
            {
              "line": "297-302",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name", "type", "start_line"],
              "schema_status": "VALID"
            },
            {
              "line": "337-342",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name", "type", "start_line", "has_jsx", "hooks_used"],
              "schema_status": "VALID"
            },
            {
              "line": "364-374",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN and GROUP BY",
              "tables": ["react_hooks (h)", "react_components (c)"],
              "columns_used": ["file", "component_name", "hook_name", "name"],
              "schema_status": "VALID"
            },
            {
              "line": "393-399",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_components",
              "columns_used": ["file", "name", "start_line", "props_type"],
              "schema_status": "VALID"
            },
            {
              "line": "421-431",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "react_components",
              "columns_used": ["file", "name"],
              "schema_status": "VALID"
            }
          ],
          "frozenset_usage": {
            "status": "PASS",
            "patterns_defined": [
              "MEMO_CANDIDATES",
              "PERFORMANCE_PROPS",
              "COMPONENT_SUFFIXES",
              "ANONYMOUS_PATTERNS"
            ],
            "usage": "O(1) pattern matching in lines 222, 225"
          }
        },
        "finding_generation": {
          "status": "PASS",
          "issues": [],
          "all_findings_valid": true,
          "severity_enum_used": true,
          "required_fields_present": true
        },
        "template_compliance": {
          "status": "FAIL",
          "expected": "STANDARD",
          "reason": "queries react_components, react_hooks (not *_jsx tables)",
          "requires_jsx_pass": false,
          "correct": true,
          "note": "Metadata correctly uses requires_jsx_pass=False"
        }
      }
    },
    "hooks_analyze.py": {
      "total": 31,
      "critical": 5,
      "violations": {
        "metadata": {
          "status": "PASS",
          "issues": []
        },
        "database_contracts": {
          "status": "FAIL",
          "critical_issues": [
            {
              "line": "138-147",
              "severity": "CRITICAL",
              "violation": "CANCER - Table existence checking via sqlite_master",
              "code": "_check_table_availability() queries sqlite_master",
              "fix": "DELETE entire method"
            },
            {
              "line": "118-119",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_hooks' not in self.existing_tables: return []",
              "fix": "REMOVE check"
            },
            {
              "line": "255-256",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'cfg_blocks' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "305-306",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'variable_usage' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "403-404",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return",
              "fix": "REMOVE check"
            }
          ],
          "non_critical_issues": [
            {
              "line": "151-158",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "hook_name", "component_name", "dependency_array", "dependency_vars"],
              "schema_status": "VALID"
            },
            {
              "line": "201-208",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "hook_name", "component_name", "callback_body", "has_cleanup", "cleanup_type"],
              "schema_status": "VALID"
            },
            {
              "line": "258-267",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN",
              "tables": ["react_hooks (h)", "cfg_blocks (b)"],
              "columns_used": ["file", "line", "hook_name", "component_name", "block_type", "condition_expr", "start_line", "end_line"],
              "schema_status": "VALID"
            },
            {
              "line": "285-293",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "hook_name", "component_name", "dependency_array", "dependency_vars", "callback_body"],
              "schema_status": "VALID"
            },
            {
              "line": "323-330",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "component_name", "callback_body"],
              "schema_status": "VALID"
            },
            {
              "line": "349-357",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "hook_name", "component_name", "dependency_array", "callback_body"],
              "schema_status": "VALID"
            },
            {
              "line": "375-384",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "react_hooks",
              "columns_used": ["file", "component_name", "has_cleanup"],
              "schema_status": "VALID"
            },
            {
              "line": "406-413",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN and ORDER BY",
              "tables": ["react_hooks (h)", "react_components (c)"],
              "columns_used": ["file", "component_name", "hook_name", "line", "name", "start_line", "end_line"],
              "schema_status": "VALID"
            },
            {
              "line": "461-470",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "hook_name", "component_name", "line"],
              "schema_status": "VALID"
            },
            {
              "line": "490-499",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "react_hooks",
              "columns_used": ["file", "component_name", "dependency_array"],
              "schema_status": "VALID"
            }
          ],
          "frozenset_usage": {
            "status": "PASS",
            "patterns_defined": [
              "HOOKS_WITH_DEPS",
              "HOOKS_WITHOUT_DEPS",
              "CLEANUP_REQUIRED",
              "CLEANUP_FUNCTIONS",
              "TOP_LEVEL_HOOKS",
              "DANGEROUS_SETTERS"
            ],
            "usage": "O(1) lookups throughout analysis methods"
          }
        },
        "finding_generation": {
          "status": "PASS",
          "issues": [],
          "all_findings_valid": true,
          "severity_enum_used": true,
          "required_fields_present": true
        },
        "template_compliance": {
          "status": "PASS",
          "expected": "STANDARD",
          "reason": "queries react_hooks (not *_jsx tables)",
          "requires_jsx_pass": false,
          "correct": true
        }
      }
    },
    "render_analyze.py": {
      "total": 31,
      "critical": 5,
      "violations": {
        "metadata": {
          "status": "PASS",
          "issues": []
        },
        "database_contracts": {
          "status": "FAIL",
          "critical_issues": [
            {
              "line": "140-149",
              "severity": "CRITICAL",
              "violation": "CANCER - Table existence checking via sqlite_master",
              "code": "_check_table_availability() queries sqlite_master",
              "fix": "DELETE entire method"
            },
            {
              "line": "120-121",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'function_call_args' not in self.existing_tables: return []",
              "fix": "REMOVE check"
            },
            {
              "line": "153-154",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "323-324",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_hooks' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "359-360",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return",
              "fix": "REMOVE check"
            }
          ],
          "non_critical_issues": [
            {
              "line": "157-167",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN - iterating over EXPENSIVE_OPERATIONS frozenset",
              "tables": ["function_call_args (f)", "react_components (c)"],
              "columns_used": ["file", "line", "callee_function", "caller_function", "name", "start_line", "end_line"],
              "schema_status": "VALID"
            },
            {
              "line": "186-195",
              "severity": "HIGH",
              "violation": "Direct SQL - iterating over MUTATING_METHODS frozenset",
              "table": "function_call_args",
              "columns_used": ["file", "line", "callee_function", "argument_expr"],
              "schema_status": "VALID"
            },
            {
              "line": "213-222",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "function_call_args",
              "columns_used": ["file", "line", "argument_expr", "callee_function"],
              "schema_status": "VALID"
            },
            {
              "line": "243-250",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "function_call_args",
              "columns_used": ["file", "line", "callee_function", "argument_expr"],
              "schema_status": "VALID"
            },
            {
              "line": "270-275",
              "severity": "HIGH",
              "violation": "Direct SQL - iterating over OBJECT_CREATORS frozenset",
              "table": "function_call_args",
              "columns_used": ["file", "line", "callee_function"],
              "schema_status": "VALID"
            },
            {
              "line": "295-304",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "function_call_args",
              "columns_used": ["file", "line", "argument_expr"],
              "schema_status": "VALID"
            },
            {
              "line": "326-340",
              "severity": "HIGH",
              "violation": "Direct SQL with nested SELECT",
              "table": "react_hooks",
              "columns_used": ["file", "line", "component_name", "hook_name", "dependency_array"],
              "schema_status": "VALID"
            },
            {
              "line": "362-372",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN",
              "tables": ["function_call_args (f)", "react_components (c)"],
              "columns_used": ["file", "line", "argument_expr", "has_jsx", "start_line", "end_line", "name"],
              "schema_status": "VALID"
            },
            {
              "line": "395-402",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "react_hooks",
              "columns_used": ["file", "component_name"],
              "schema_status": "VALID"
            },
            {
              "line": "421-427",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "function_call_args",
              "columns_used": ["file", "line", "argument_expr"],
              "schema_status": "VALID"
            }
          ],
          "frozenset_usage": {
            "status": "PASS",
            "patterns_defined": [
              "EXPENSIVE_OPERATIONS",
              "MUTATING_METHODS",
              "OBJECT_CREATORS",
              "INLINE_FUNCTION_PATTERNS",
              "EVENT_HANDLERS",
              "PERF_PROPS"
            ],
            "usage": "O(1) pattern matching - iterates over frozensets in SQL loops"
          }
        },
        "finding_generation": {
          "status": "PASS",
          "issues": [],
          "all_findings_valid": true,
          "severity_enum_used": true,
          "required_fields_present": true
        },
        "template_compliance": {
          "status": "PASS",
          "expected": "STANDARD",
          "reason": "queries function_call_args, react_components (not *_jsx tables)",
          "requires_jsx_pass": false,
          "correct": true
        }
      }
    },
    "state_analyze.py": {
      "total": 31,
      "critical": 5,
      "violations": {
        "metadata": {
          "status": "PASS",
          "issues": []
        },
        "database_contracts": {
          "status": "FAIL",
          "critical_issues": [
            {
              "line": "136-145",
              "severity": "CRITICAL",
              "violation": "CANCER - Table existence checking via sqlite_master",
              "code": "_check_table_availability() queries sqlite_master",
              "fix": "DELETE entire method"
            },
            {
              "line": "116-117",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_hooks' not in self.existing_tables: return []",
              "fix": "REMOVE check"
            },
            {
              "line": "209-210",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'assignments' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "243-244",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'function_call_args' not in self.existing_tables: return",
              "fix": "REMOVE check"
            },
            {
              "line": "276-277",
              "severity": "CRITICAL",
              "violation": "CANCER - Conditional execution based on table existence",
              "code": "if 'react_components' not in self.existing_tables: return",
              "fix": "REMOVE check"
            }
          ],
          "non_critical_issues": [
            {
              "line": "148-158",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "react_hooks",
              "columns_used": ["file", "component_name", "hook_name"],
              "schema_status": "VALID"
            },
            {
              "line": "177-190",
              "severity": "HIGH",
              "violation": "Direct SQL with nested SELECT",
              "table": "react_hooks",
              "columns_used": ["file", "component_name", "hook_name"],
              "schema_status": "VALID"
            },
            {
              "line": "212-218",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "assignments",
              "columns_used": ["file", "line", "target_var", "source_expr"],
              "schema_status": "VALID"
            },
            {
              "line": "246-257",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY",
              "table": "function_call_args",
              "columns_used": ["file", "caller_function", "callee_function"],
              "schema_status": "VALID"
            },
            {
              "line": "280-287",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY - iterating over DRILL_PROPS frozenset",
              "table": "react_components",
              "columns_used": ["file", "props_type", "name"],
              "schema_status": "VALID"
            },
            {
              "line": "309-320",
              "severity": "HIGH",
              "violation": "Direct SQL with GROUP BY - iterating over CONTEXT_PATTERNS frozenset",
              "table": "variable_usage",
              "columns_used": ["variable_name", "in_component"],
              "schema_status": "VALID"
            },
            {
              "line": "338-354",
              "severity": "HIGH",
              "violation": "Direct SQL with nested SELECT",
              "table": "react_hooks",
              "columns_used": ["file", "line", "component_name", "hook_name", "dependency_array"],
              "schema_status": "VALID"
            },
            {
              "line": "372-383",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "hook_name", "callback_body"],
              "schema_status": "VALID"
            },
            {
              "line": "403-410",
              "severity": "HIGH",
              "violation": "Direct SQL without build_query()",
              "table": "react_hooks",
              "columns_used": ["file", "line", "component_name", "callback_body"],
              "schema_status": "VALID"
            },
            {
              "line": "436-446",
              "severity": "HIGH",
              "violation": "Direct SQL with JOIN",
              "tables": ["function_call_args (f1)", "function_call_args (f2)"],
              "columns_used": ["file", "line", "callee_function", "caller_function"],
              "schema_status": "VALID"
            }
          ],
          "frozenset_usage": {
            "status": "PASS",
            "patterns_defined": [
              "STATE_PREFIXES",
              "COMMON_STATE",
              "CONTEXT_PATTERNS",
              "DRILL_PROPS",
              "STATE_SETTERS"
            ],
            "usage": "O(1) pattern matching - iterates over frozensets in SQL loops"
          }
        },
        "finding_generation": {
          "status": "PASS",
          "issues": [],
          "all_findings_valid": true,
          "severity_enum_used": true,
          "required_fields_present": true
        },
        "template_compliance": {
          "status": "PASS",
          "expected": "STANDARD",
          "reason": "queries react_hooks, variable_usage (not *_jsx tables)",
          "requires_jsx_pass": false,
          "correct": true
        }
      }
    }
  },
  "critical_issues": [
    {
      "issue": "ALL FILES VIOLATE ABSOLUTE PROHIBITION",
      "description": "Every React rule file contains _check_table_availability() method that queries sqlite_master and conditional execution based on table existence",
      "affected_files": [
        "component_analyze.py",
        "hooks_analyze.py",
        "render_analyze.py",
        "state_analyze.py"
      ],
      "impact": "Architectural cancer - violates schema contract system guarantee that all tables exist",
      "fix": "DELETE _check_table_availability() method and REMOVE ALL conditional checks like 'if table not in existing_tables'"
    },
    {
      "issue": "NO USE OF build_query()",
      "description": "All files use direct SQL queries instead of schema-safe build_query() helper",
      "affected_files": [
        "component_analyze.py",
        "hooks_analyze.py",
        "render_analyze.py",
        "state_analyze.py"
      ],
      "impact": "Medium - queries work but lack type safety and schema validation",
      "recommendation": "Consider refactoring to use build_query() for simple SELECT statements"
    }
  ],
  "positive_findings": [
    {
      "aspect": "Rule Metadata",
      "status": "EXCELLENT",
      "details": "All 4 files have complete METADATA blocks with correct fields and proper requires_jsx_pass=False"
    },
    {
      "aspect": "Frozenset Pattern Usage",
      "status": "EXCELLENT",
      "details": "All files use frozen dataclasses with frozensets for O(1) pattern matching"
    },
    {
      "aspect": "Finding Generation",
      "status": "EXCELLENT",
      "details": "All StandardFinding() calls use correct parameter names (file_path=, rule_name=, etc.) and Severity enum"
    },
    {
      "aspect": "Template Compliance",
      "status": "EXCELLENT",
      "details": "All files correctly use STANDARD template (not JSX) and query non-jsx tables (react_components, react_hooks, function_call_args)"
    },
    {
      "aspect": "Column Name Compliance",
      "status": "EXCELLENT",
      "details": "ALL database queries use correct column names per schema.py - zero column name mismatches found"
    }
  ],
  "schema_validation": {
    "tables_queried": [
      "react_components",
      "react_hooks",
      "function_call_args",
      "variable_usage",
      "assignments",
      "cfg_blocks",
      "react_components",
      "function_returns"
    ],
    "column_validation": {
      "total_queries_checked": 40,
      "column_mismatches": 0,
      "status": "100% COMPLIANT",
      "details": "All column names match schema.py definitions exactly"
    }
  },
  "recommendations": [
    {
      "priority": "P0",
      "action": "DELETE _check_table_availability() from all 4 files",
      "reason": "Violates schema contract guarantee - architectural cancer",
      "estimated_effort": "15 minutes"
    },
    {
      "priority": "P0",
      "action": "REMOVE all conditional checks 'if table not in existing_tables'",
      "reason": "Schema contract guarantees table existence - no need for checks",
      "estimated_effort": "15 minutes"
    },
    {
      "priority": "P1",
      "action": "Consider refactoring simple SELECT queries to use build_query()",
      "reason": "Adds type safety and schema validation at query build time",
      "estimated_effort": "1-2 hours",
      "note": "Complex JOINs and GROUP BY queries can remain as direct SQL"
    }
  ],
  "summary": {
    "total_files": 4,
    "files_with_violations": 4,
    "gold_standard_files": 0,
    "critical_violations": 20,
    "high_violations": 40,
    "compliance_rate": "0% (table existence checks)",
    "column_accuracy_rate": "100% (all column names correct)",
    "overall_assessment": "CRITICAL VIOLATIONS PRESENT - All files violate absolute prohibition against table existence checking, BUT all database queries use correct column names and patterns are well-structured with frozensets",
    "fix_difficulty": "LOW - Delete one method and remove conditional checks",
    "estimated_fix_time": "30 minutes for all 4 files"
  }
}
