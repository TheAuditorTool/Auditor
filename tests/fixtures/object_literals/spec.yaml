name: object_literals
description: |
  JavaScript object literal extraction testing across syntactic patterns.

  Tests object_literal_properties table population with:
  - Function references (handleCreate, processRequest, etc.)
  - Shorthand properties ({ handleClick } ES6 syntax)
  - Computed property names ([key], ['literal'])
  - Nested object hierarchies (3 levels deep)
  - Arrow functions and method definitions
  - Spread operators and edge cases

verification_rules:
  - name: object_literal_properties_extracted
    description: Verify object literal properties are extracted from all files
    query: |
      SELECT
        object_name,
        key,
        value,
        file
      FROM object_literal_properties
      WHERE file LIKE '%object_literals%'
      ORDER BY file, object_name
    expected_minimum: 55

  - name: basic_function_references
    description: Find function reference properties from basic_patterns.js
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%basic_patterns.js'
        AND value LIKE '%handle%'
      ORDER BY object_name
    expected_minimum: 6

  - name: shorthand_properties
    description: Find ES6 shorthand properties where key equals value
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%object_literals%'
        AND key = value
      ORDER BY object_name
    expected_minimum: 3

  - name: arrow_functions_in_objects
    description: Find arrow function properties
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%basic_patterns.js'
        AND value LIKE '%=>%'
      ORDER BY key
    expected_minimum: 3

  - name: es6_method_definitions
    description: Find ES6 method definitions from edge_cases.js
    query: |
      SELECT
        object_name,
        key
      FROM object_literal_properties
      WHERE file LIKE '%edge_cases.js'
        AND (
          key = 'fetch'
          OR key = 'generator'
          OR key = 'getValue'
          OR key = 'setValue'
        )
      ORDER BY key
    expected_minimum: 4

  - name: computed_property_names
    description: Find computed property names
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%edge_cases.js'
        AND (key LIKE '[%' OR key LIKE 'dynamic%')
      ORDER BY key
    expected_minimum: 2

  - name: nested_object_properties
    description: Find properties in nested objects from nested_objects.js
    query: |
      SELECT
        object_name,
        key,
        value,
        nesting_level
      FROM object_literal_properties
      WHERE file LIKE '%nested_objects.js'
      ORDER BY nesting_level, object_name
    expected_minimum: 10

  - name: spread_operator_handling
    description: Verify spread operators in objects are handled
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%edge_cases.js'
        AND (object_name = 'extended' OR value LIKE '%...%')
      ORDER BY key
    expected_minimum: 3

  - name: function_context_objects
    description: Find object literals inside function contexts
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%function_context.js'
      ORDER BY object_name
    expected_minimum: 12

  - name: empty_objects
    description: Verify empty objects are tracked
    query: |
      SELECT object_name, file
      FROM object_literal_properties
      WHERE file LIKE '%edge_cases.js'
        AND object_name = 'empty'
    expected_minimum: 0  # Empty objects have no properties

  - name: assignment_vs_declaration
    description: Find object literals in assignment expressions vs declarations
    query: |
      SELECT
        object_name,
        key,
        value
      FROM object_literal_properties
      WHERE file LIKE '%edge_cases.js'
        AND object_name = 'mutableHandlers'
      ORDER BY key
    expected_minimum: 2

coverage_breakdown:
  basic_patterns.js:
    - pattern: Function references
      examples: [handleCreate, handleUpdate, handleDelete]
      count: 3

    - pattern: Shorthand properties
      examples: [handleClick, handleSubmit, handleCancel]
      count: 3

    - pattern: Mixed literals
      examples: [timeout, retry, maxRetries, handler]
      count: 5

    - pattern: Arrow functions
      examples: [validate, transform, cleanup]
      count: 3

    - pattern: Function expressions
      examples: [process, validate]
      count: 2

  edge_cases.js:
    - pattern: ES6 methods
      examples: [fetch, generator, getValue, setValue]
      count: 4

    - pattern: Spread operators
      examples: [...base, z, handler]
      count: 3

    - pattern: Computed keys
      examples: [[key], ['literal'], normalKey]
      count: 3

    - pattern: String literals
      examples: [message, list, handler]
      count: 3

    - pattern: Assignment expressions
      examples: [add, remove]
      count: 2

  nested_objects.js:
    - pattern: Nested hierarchies
      examples: [routes.api.users.create, routes.api.posts.create]
      count: 6

    - pattern: Mixed nesting
      examples: [complex.level1, complex.nested.level2, complex.nested.deeper.level3]
      count: 4

  function_context.js:
    - pattern: Objects in functions
      examples: [return values, parameters, default params]
      count: 12

expected_extraction_totals:
  total_properties: 55+
  function_references: 20+
  shorthand_properties: 3+
  computed_properties: 2+
  nested_properties: 10+
  method_definitions: 4+
  arrow_functions: 3+
