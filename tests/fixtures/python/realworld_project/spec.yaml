name: realworld_project
description: |
  Comprehensive Python framework fixture testing multiple ecosystems:
  - SQLAlchemy ORM with relationships
  - FastAPI routes with dependency injection
  - Celery background tasks with security configs
  - Pydantic validators
  - Django forms, admin, middleware, DRF serializers
  - WTForms
  - Python generators and async patterns

verification_rules:
  - name: orm_models_extracted
    description: Verify ORM models are indexed
    query: |
      SELECT model_name, table_name
      FROM python_orm_models
      WHERE file LIKE '%realworld_project%'
      ORDER BY model_name
    expected_minimum: 4

  - name: orm_relationships_bidirectional
    description: Verify bidirectional ORM relationships with cascade flags
    query: |
      SELECT
        source_model,
        source_field,
        target_model,
        relationship_type,
        cascade_delete
      FROM orm_relationships
      WHERE file LIKE '%realworld_project%'
      ORDER BY source_model, source_field
    expected_minimum: 8

  - name: fastapi_routes_with_deps
    description: Verify FastAPI routes with dependency injection
    query: |
      SELECT method, pattern, handler_function
      FROM python_routes
      WHERE file LIKE '%realworld_project%'
      ORDER BY pattern
    expected_minimum: 4

  - name: celery_tasks_security_configs
    description: Find Celery tasks with security configurations
    query: |
      SELECT
        task_name,
        serializer,
        bind,
        time_limit,
        rate_limit
      FROM python_celery_tasks
      WHERE file LIKE '%realworld_project%'
      ORDER BY task_name
    expected_minimum: 15

  - name: celery_pickle_vulnerability
    description: Find CRITICAL security risk - Celery tasks using pickle serializer
    query: |
      SELECT task_name, serializer, file, line
      FROM python_celery_tasks
      WHERE serializer = 'pickle'
        AND file LIKE '%realworld_project%'
    expected_minimum: 1
    severity: CRITICAL

  - name: pydantic_validators
    description: Verify Pydantic field and root validators are extracted
    query: |
      SELECT validator_name, validator_type, field_name
      FROM python_validators
      WHERE file LIKE '%realworld_project%'
      ORDER BY validator_name
    expected_minimum: 2

  - name: django_forms_fields
    description: Verify Django forms and their fields
    query: |
      SELECT form_name, COUNT(*) as field_count
      FROM python_django_form_fields
      WHERE file LIKE '%realworld_project%'
      GROUP BY form_name
      ORDER BY form_name
    expected_minimum: 3

  - name: wtforms_extraction
    description: Verify WTForms forms are extracted
    query: |
      SELECT form_name, base_class
      FROM python_wtforms_forms
      WHERE file LIKE '%realworld_project%'
      ORDER BY form_name
    expected_minimum: 5

  - name: drf_serializers
    description: Verify Django REST Framework serializers
    query: |
      SELECT serializer_name, base_class
      FROM python_drf_serializers
      WHERE file LIKE '%realworld_project%'
      ORDER BY serializer_name
    expected_minimum: 5

  - name: django_middleware
    description: Verify Django middleware classes
    query: |
      SELECT middleware_name, file
      FROM python_django_middleware
      WHERE file LIKE '%realworld_project%'
      ORDER BY middleware_name
    expected_minimum: 3

  - name: python_generators
    description: Verify generator functions and expressions
    query: |
      SELECT COUNT(*) as generator_count
      FROM python_generators
      WHERE file LIKE '%realworld_project%'
    expected_minimum: 20

  - name: cascade_delete_security_risk
    description: Find ORM relationships with cascade delete (data loss risk)
    query: |
      SELECT
        source_model,
        target_model,
        cascade_delete
      FROM orm_relationships
      WHERE cascade_delete = 1
        AND file LIKE '%realworld_project%'
    expected_minimum: 2
    severity: MEDIUM

security_patterns:
  - pattern: celery_pickle_serializer
    severity: CRITICAL
    description: |
      Celery task 'dangerous_task' uses pickle serializer which allows
      Remote Code Execution (RCE) if untrusted data is deserialized.
    query: |
      SELECT task_name, decorator_name, serializer, file, line
      FROM python_celery_tasks
      WHERE serializer = 'pickle'

  - pattern: celery_no_rate_limit
    severity: MEDIUM
    description: |
      Celery tasks without rate_limit configuration can be abused for DoS attacks.
    query: |
      SELECT task_name, rate_limit, time_limit, file
      FROM python_celery_tasks
      WHERE (rate_limit IS NULL OR rate_limit = '')
        AND file LIKE '%realworld_project%'

  - pattern: orm_cascade_delete
    severity: MEDIUM
    description: |
      ORM models with cascade='all, delete-orphan' can cause unintended data loss
      if parent records are deleted without proper authorization checks.
    query: |
      SELECT source_model, target_model, cascade_delete
      FROM orm_relationships
      WHERE cascade_delete = 1
