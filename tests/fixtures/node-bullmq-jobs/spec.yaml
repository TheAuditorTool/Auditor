# BullMQ Job Queue Fixture Verification Spec
# Tests: Queue creation, worker patterns, job processing, retries, rate limiting
# Version: 1.0.0

name: "BullMQ Job Queue Test Suite"
description: "Comprehensive BullMQ patterns for async job processing, retries, and worker management"

# Test 1: Email queue creation
- name: "Email queue instantiation"
  type: "queue_extraction"
  description: "Verify emailQueue created with BullMQ Queue class"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'emailQueue'
      AND type = 'variable'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "emailQueue"
      type: "variable"

# Test 2: Image queue creation
- name: "Image queue instantiation"
  type: "queue_extraction"
  description: "Verify imageQueue created with rate limiting"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'imageQueue'
      AND type = 'variable'
      AND file LIKE '%queues/image-queue.js'
  expect:
    - name: "imageQueue"
      type: "variable"

# Test 3: Email worker creation
- name: "Email worker instantiation"
  type: "worker_extraction"
  description: "Verify emailWorker created with Worker class"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'emailWorker'
      AND type = 'variable'
      AND file LIKE '%workers/email-worker.js'
  expect:
    - name: "emailWorker"
      type: "variable"

# Test 4: Job creation functions - sendWelcomeEmail
- name: "sendWelcomeEmail job creator"
  type: "function_extraction"
  description: "Verify sendWelcomeEmail function creates welcome email job"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'sendWelcomeEmail'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "sendWelcomeEmail"
      type: "function"

# Test 5: Job creation with sensitive data - sendPasswordResetEmail
- name: "sendPasswordResetEmail security job"
  type: "function_extraction"
  description: "Verify password reset email job with security settings"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'sendPasswordResetEmail'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "sendPasswordResetEmail"
      type: "function"

# Test 6: Bulk job creation - sendNewsletter
- name: "sendNewsletter bulk job creator"
  type: "function_extraction"
  description: "Verify bulk job creation with addBulk"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'sendNewsletter'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "sendNewsletter"
      type: "function"

# Test 7: Delayed job - schedulePromotionalEmail
- name: "schedulePromotionalEmail delayed job"
  type: "function_extraction"
  description: "Verify delayed job scheduling with future execution"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'schedulePromotionalEmail'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "schedulePromotionalEmail"
      type: "function"

# Test 8: Image processing jobs - resizeImage
- name: "resizeImage job creator"
  type: "function_extraction"
  description: "Verify image resize job with multiple output formats"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'resizeImage'
      AND type = 'function'
      AND file LIKE '%queues/image-queue.js'
  expect:
    - name: "resizeImage"
      type: "function"

# Test 9: Batch processing - processBatchImages
- name: "processBatchImages batch job creator"
  type: "function_extraction"
  description: "Verify batch image processing with rate limiting"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'processBatchImages'
      AND type: "function"
      AND file LIKE '%queues/image-queue.js'
  expect:
    - name: "processBatchImages"
      type: "function"

# Test 10: Worker job processor - processEmailJob
- name: "processEmailJob worker processor"
  type: "function_extraction"
  description: "Verify worker job processing function"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'processEmailJob'
      AND type = 'function'
      AND file LIKE '%workers/email-worker.js'
  expect:
    - name: "processEmailJob"
      type: "function"

# Test 11: Queue statistics - getEmailQueueStats
- name: "getEmailQueueStats metrics function"
  type: "function_extraction"
  description: "Verify queue metrics retrieval"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'getEmailQueueStats'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "getEmailQueueStats"
      type: "function"

# Test 12: Job retry - retryFailedEmail
- name: "retryFailedEmail manual retry"
  type: "function_extraction"
  description: "Verify manual job retry functionality"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'retryFailedEmail'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "retryFailedEmail"
      type: "function"

# Test 13: Queue flow control - pauseEmailQueue
- name: "pauseEmailQueue flow control"
  type: "function_extraction"
  description: "Verify queue pause functionality"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'pauseEmailQueue'
      AND type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect:
    - name: "pauseEmailQueue"
      type: "function"

# Test 14: Job progress tracking - updateJobProgress
- name: "updateJobProgress tracking"
  type: "function_extraction"
  description: "Verify job progress update functionality"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'updateJobProgress'
      AND type = 'function'
      AND file LIKE '%queues/image-queue.js'
  expect:
    - name: "updateJobProgress"
      type: "function"

# Test 15: Job cancellation - cancelImageJob
- name: "cancelImageJob cancellation"
  type: "function_extraction"
  description: "Verify job cancellation functionality"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'cancelImageJob'
      AND type = 'function'
      AND file LIKE '%queues/image-queue.js'
  expect:
    - name: "cancelImageJob"
      type: "function"

# Test 16: Worker health check
- name: "healthCheck worker monitoring"
  type: "function_extraction"
  description: "Verify worker health check functionality"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'healthCheck'
      AND type = 'function'
      AND file LIKE '%workers/email-worker.js'
  expect:
    - name: "healthCheck"
      type: "function"

# Test 17: Worker shutdown - graceful cleanup
- name: "shutdown worker cleanup"
  type: "function_extraction"
  description: "Verify graceful worker shutdown"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE name = 'shutdown'
      AND type = 'function'
      AND file LIKE '%workers/email-worker.js'
  expect:
    - name: "shutdown"
      type: "function"

# Test 18: Taint flow - email job data
- name: "Email job user input taint"
  type: "taint_tracking"
  description: "Verify userData -> emailQueue.add taint flow"
  query: |
    SELECT
      source,
      sink,
      flow_type
    FROM taint_flows
    WHERE source LIKE '%userData.email%'
      AND sink LIKE '%emailQueue.add%'
      AND file LIKE '%queues/email-queue.js'
  expect_count_min: 1

# Test 19: Taint flow - image URL processing
- name: "Image URL user input taint"
  type: "taint_tracking"
  description: "Verify imageUrl (user input) -> imageQueue.add taint flow"
  query: |
    SELECT
      source,
      sink,
      flow_type
    FROM taint_flows
    WHERE source LIKE '%imageUrl%'
      AND sink LIKE '%imageQueue.add%'
      AND file LIKE '%queues/image-queue.js'
  expect_count_min: 1

# Test 20: Taint flow - email sending
- name: "Email SMTP taint flow"
  type: "taint_tracking"
  description: "Verify job.data.to -> transporter.sendMail taint flow"
  query: |
    SELECT
      source,
      sink,
      flow_type
    FROM taint_flows
    WHERE source LIKE '%job.data.to%'
      AND sink LIKE '%transporter.sendMail%'
      AND file LIKE '%workers/email-worker.js'
  expect_count_min: 1

# Test 21: All queue functions extracted
- name: "Total email queue functions"
  type: "function_extraction"
  description: "Verify all email queue management functions extracted"
  query: |
    SELECT
      COUNT(*) as function_count
    FROM symbols
    WHERE type = 'function'
      AND file LIKE '%queues/email-queue.js'
  expect_count_min: 12  # All queue management functions

# Test 22: All image queue functions extracted
- name: "Total image queue functions"
  type: "function_extraction"
  description: "Verify all image queue functions extracted"
  query: |
    SELECT
      COUNT(*) as function_count
    FROM symbols
    WHERE type = 'function'
      AND file LIKE '%queues/image-queue.js'
  expect_count_min: 15  # All image processing functions

# Test 23: Redis configuration extraction
- name: "Redis configuration"
  type: "config_extraction"
  description: "Verify Redis configuration functions"
  query: |
    SELECT
      name,
      type,
      file
    FROM symbols
    WHERE type = 'function'
      AND file LIKE '%config/redis.js'
    ORDER BY name
  expect_count_min: 2  # createRedisConnection, getQueueConnection

downstream_impact:
  blueprint:
    - "aud blueprint will show 'BullMQ: 2 queues (email, image) with 2 workers'"
    - "Job flow visualization: Queue → Worker → Processing"
    - "Rate limiting configuration displayed"

  planning:
    - "aud planning can analyze job patterns for scaling"
    - "Identify high-priority vs low-priority job flows"
    - "Suggest worker concurrency optimizations"

  taint_analyze:
    - "Track user input through job queues: userData → emailQueue → emailWorker"
    - "Track sensitive data: resetToken → job data → email template"
    - "Image URL taint: imageUrl → resize job → Sharp processing"

  context:
    - "Query job dependencies: Email jobs depend on SMTP config"
    - "Worker health monitoring queries"
    - "Job failure analysis: which job types fail most?"

  detect_patterns:
    - "Unprotected sensitive data in job payloads (password reset tokens)"
    - "Missing rate limiting on job creation endpoints"
    - "Insufficient retry configuration for critical jobs"
    - "Jobs without timeout settings"

patterns_tested:
  queue_patterns:
    - "Queue creation with default job options"
    - "Priority queuing (1-10 scale)"
    - "Delayed job execution"
    - "Bulk job creation (addBulk)"
    - "Job expiration and TTL"
    - "Rate limiting (max jobs per duration)"
    - "Job removal policies (removeOnComplete, removeOnFail)"

  worker_patterns:
    - "Worker creation with concurrency"
    - "Job processor function"
    - "Progress tracking (updateProgress)"
    - "Error handling with retries"
    - "Exponential backoff"
    - "Fixed delay backoff"
    - "Worker event handlers (completed, failed, progress, etc.)"
    - "Graceful shutdown"
    - "Health check monitoring"

  job_patterns:
    - "High-priority jobs (welcome emails, password resets)"
    - "Low-priority jobs (newsletters, promotional emails)"
    - "Scheduled/delayed jobs"
    - "Batch processing"
    - "Job cancellation"
    - "Manual retry"
    - "Job state tracking"
    - "Job progress reporting"

  security_patterns:
    - "Sensitive data handling (password reset tokens)"
    - "Job data sanitization"
    - "Rate limiting to prevent abuse"
    - "Immediate removal of sensitive jobs"
    - "Worker authentication with Redis"

real_world_coverage:
  production_use_cases:
    - "Email delivery systems"
    - "Image processing pipelines"
    - "Report generation queues"
    - "Video transcoding"
    - "Scheduled task execution"
    - "Webhook delivery"
    - "Data export jobs"

  frameworks_simulated:
    - "BullMQ 5.x"
    - "ioredis for Redis connection"
    - "Nodemailer for SMTP"
    - "Sharp for image processing"
